@{
    ViewData["Title"] = "Home Page";
}

<div class="main-content">
    <div class="row mb-3 d-flex justify-content-center">
        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
            <i class="fa fa-user"></i>
             Nama Anggota
        </button>
    </div>

    <div class="row">
        <div class="col-sm-12 col-md-6 mt-3">
            Total Cost : <span id="cost"></span><span> Km</span>
        </div>
        <div class="col-sm-12 col-md-6 mt-3">
            Jalur : <span id="path"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 mt-3">
            <button class="btn btn-primary" id="djikstra">Dijkstra</button>
        </div>
    </div>

    <hr>

    <div id="map" class="mt-3"></div>
</div>

<style>
    #map {
        width: 100%;
        height: 600px; /* Sesuaikan untuk layar kecil */
    }
    
    .col {
        padding-right: 0;
    }
</style>

@section Scripts {
    <partial name="_MapsApiPartial" />

    <script type="text/javascript">
        const buttonDjikstra = $("button#djikstra");
        const spanCost = $("span#cost");
        const spanPath = $("span#path");
        let map;
        let featureLayer;

        async function initMap() {
            let daftarDestinasi;
            let daftarEdges;

            const response = await fetch("/destinasi-wisata");
            if (response.ok) {
                daftarDestinasi = await response.json();
            }

            const responseEdge = await fetch("/destinasi-wisata/edges");
            if (responseEdge.ok) {
                daftarEdges = await responseEdge.json();
            }

            const pos = { lat: - 10.17696822001329, lng: 123.60338374889992 };

            const { Map } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

            // The map, centered at Uluru
            map = new Map(document.getElementById("map"), {
                zoom: 13,
                center: pos,
                mapId: "3e8984c4ea81cbad"
            });

            featureLayer = map.getFeatureLayer("ADMINISTRATIVE_AREA_LEVEL_2");
            const featureStyleOptions = {
                strokeColor: "#810FCB",
                strokeOpacity: 1.0,
                strokeWeight: 3.0,
                fillColor: "#810FCB",
                fillOpacity: 0.1,
            };
            featureLayer.style = (options) => {
                if (options.feature.placeId == "ChIJt2h8DSabViwRVWssMPDUjcY") {
                    return featureStyleOptions;
                }
            };

            const directionsService = new google.maps.DirectionsService();

            // The marker, positioned at Uluru
            const markers = [];

            for (let destinasi of daftarDestinasi) {
                const contentString =
                    '<div id="content">' +
                    '<div id="siteNotice">' +
                    "</div>" +
                    '<h4 id="firstHeading" class="firstHeading">' + destinasi.nama + '</h4>' +
                    '<div id="bodyContent">' +
                    "</div>" +
                    "</div>";

                const infoWindow = new google.maps.InfoWindow({
                    ariaLabel: destinasi.nama,
                    content: contentString
                });

                const m = new AdvancedMarkerElement({
                    map: map,
                    position: { lat: destinasi.titikKoordinat.x, lng: destinasi.titikKoordinat.y },
                    title: destinasi.nama
                });

                m.addListener("click", () => {
                    infoWindow.open({
                        anchor: m,
                        map
                    });
                });

                infoWindow.addListener("visible", () => infoWindow.focus());

                map.addListener("click", () => infoWindow.close());

                markers.push(m);
            }

            const directionsRenderers = [];
            for (let edge of daftarEdges) {
                const line = [
                    { lat: edge.v1.value.titikKoordinat.x, lng: edge.v1.value.titikKoordinat.y },
                    { lat: edge.v2.value.titikKoordinat.x, lng: edge.v2.value.titikKoordinat.y }
                ];

                const request = {
                    origin: line[0],
                    destination: line[1],
                    travelMode: 'DRIVING',
                    unitSystem: google.maps.UnitSystem.METRIC
                };

                directionsService.route(request, function (result, status) {
                    if (status == 'OK') {
                        const directionsRenderer = new google.maps.DirectionsRenderer({ 
                            markerOptions: { visible: false },
                            preserveViewport: true
                        });

                        directionsRenderer.setMap(map);
                        directionsRenderer.setDirections(result);
                        directionsRenderers.push(directionsRenderer);
                    }
                });
            }

            // buttonDjikstra.on('click', async function() {
            //     const start = selectStart.val();
            //     const daftarKelurahan = selectEnd.val();

            //     const request = { Start: start, DaftarKelurahan: daftarKelurahan };
            //     const responsePath = await fetch("/kelurahans/final", {
            //         method: "POST",
            //         headers: {
            //             "Content-Type": "application/json",
            //         },
            //         body: JSON.stringify(request)
            //     });

            //     if (responsePath.ok) {
            //         const result = await responsePath.json();

            //         for (let d of directionsRenderers) {
            //             d.setMap(null);
            //         }
                    
            //         directionsRenderers.length = 0;
            //         let pathString = "";

            //         for (let i = 1; i < result.path.length; i++) {
            //             const kel1 = result.path[i - 1];
            //             const kel2 = result.path[i];

            //             const line = [
            //                 { lat: kel1.value.koordinat.x, lng: kel1.value.koordinat.y },
            //                 { lat: kel2.value.koordinat.x, lng: kel2.value.koordinat.y }
            //             ];

            //             const request = {
            //                 origin: line[0],
            //                 destination: line[1],
            //                 travelMode: 'DRIVING',
            //                 unitSystem: google.maps.UnitSystem.METRIC
            //             };

            //             directionsService.route(request, function (result, status) {
            //                 if (status == 'OK') {
            //                     const directionsRenderer = new google.maps.DirectionsRenderer({
            //                         markerOptions: { visible: false },
            //                         preserveViewport: true
            //                     });
            //                     directionsRenderer.setMap(map);
            //                     directionsRenderer.setDirections(result);
            //                     directionsRenderers.push(directionsRenderer);
            //                 }
            //             });

            //             if (daftarKelurahan.indexOf(kel1.value.nama) == -1) { 
            //                 pathString += `${kel1.value.nama}`;
            //             } else {
            //                 pathString += `<b>${kel1.value.nama}</b>`;
            //             }

            //             if (i != result.path.length - 1) {
            //                 pathString += " - ";
            //             } else {
            //                 if (daftarKelurahan.indexOf(kel2.value.nama) == -1) {
            //                     pathString += ` - ${kel2.value.nama}`;
            //                 } else {
            //                     pathString += ` - <b>${kel2.value.nama}</b>`;
            //                 }
            //             }
            //         }

            //         spanCost.html(result.cost);
            //         spanPath.html(pathString);
            //     }
            // });
        }

        initMap();        
    </script>
}